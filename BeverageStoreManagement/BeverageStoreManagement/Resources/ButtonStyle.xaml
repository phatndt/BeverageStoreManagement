<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">
    <Style x:Key="MenuRadioButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryGrayColor}" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="FontWeight"
                Value="Normal" />
        <Setter Property="FontSize"
                Value="15" />
        <Setter Property="Height"
                Value="60" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="menuButton"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <!-- Selected  -->
                            <Border x:Name="btnSelected"
                                    CornerRadius="10"
                                    Width="210"
                                    HorizontalAlignment="Right" />
                            <!-- Indicator -->
                            <Rectangle Name="Indicator"
                                       Width="5"
                                       Height="50"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       RadiusX="2"
                                       RadiusY="2" />
                            <!-- Icon -->
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon x:Name="Icon"
                                                         Width="25"
                                                         Height="25"
                                                         Kind="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                                         VerticalAlignment="Center"
                                                         HorizontalAlignment="Center"
                                                         Margin="15 0 0 0" />
                                <TextBlock HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           Text="{Binding Content, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                           FontWeight="SemiBold"
                                           Margin="15 0 0 0"
                                           FontSize="18"
                                           x:Name="NameContent" />
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Icon"
                                    Property="Foreground"
                                    Value="{DynamicResource Blue9}" />
                            <Setter TargetName="Indicator"
                                    Property="Fill"
                                    Value="{DynamicResource Blue9}" />
                            <Setter TargetName="Indicator"
                                    Property="Height"
                                    Value="30" />
                            <Setter TargetName="btnSelected"
                                    Property="Background"
                                    Value="{DynamicResource SecundaryGrayColorLight}" />
                            <Setter TargetName="NameContent"
                                    Property="Foreground"
                                    Value="{DynamicResource Blue9}" />
                        </Trigger>
                        <!--<Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="Icon"
                                    Property="Foreground"
                                    Value="{DynamicResource Blue4}" />
                            <Setter TargetName="Indicator"
                                    Property="Fill"
                                    Value="{DynamicResource Blue4}" />
                            <Setter TargetName="Indicator"
                                    Property="Height"
                                    Value="50" />
                            <Setter TargetName="btnSelected"
                                    Property="Background"
                                    Value="{DynamicResource SecundaryGrayColor}" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="IconButtonsStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Height"
                Value="40" />
        <Setter Property="Width"
                Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="bd"
                            CornerRadius="5"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <materialDesign:PackIcon x:Name="Icon"
                                                 Kind="{Binding Content, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                                 Width="25"
                                                 Height="25 "
                                                 HorizontalAlignment="Center"
                                                 VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Icon"
                                    Property="Foreground"
                                    Value="{DynamicResource Blue2}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                                <Condition Property="Tag"
                                           Value="IsCloseButton" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    Value="#F72626" />
                            <Setter TargetName="Icon"
                                    Property="Foreground"
                                    Value="{DynamicResource PrimaryBackgroundColor}" />
                        </MultiTrigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="Icon"
                                    Property="Foreground"
                                    Value="{DynamicResource PrimaryBackgroundColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ToolTip"
           x:Key="ToolTipStyleMainMenuButton">
        <Setter Property="Placement"
                Value="Right" />
        <Setter Property="Height"
                Value="40" />
        <Setter Property="Width"
                Value="100" />
        <Setter Property="Margin"
                Value="0,0,0,0" />
        <Setter Property="Background"
                Value="#4A5668" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="FontSize"
                Value="16" />
        <Setter Property="PlacementRectangle"
                Value="170,3,0,0" />
        <Setter Property="HorizontalOffset"
                Value="15" />
        <Setter Property="VerticalOffset"
                Value="6" />
        <Setter Property="HasDropShadow"
                Value="True" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Name="Border"
                            CornerRadius="4"
                            BorderThickness="1"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Background="{DynamicResource Blue4}">
                        <ContentPresenter Margin="4"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextButtonsStyle"
           TargetType="{x:Type TextBlock}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Height"
                Value="40" />
        <Setter Property="Width"
                Value="40" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
    </Style>
    <Style TargetType="{x:Type TextBlock}"
           x:Key="HorizontalExpanderContentTextBlock">
        <Setter Property="Opacity"
                Value=".68" />
        <Setter Property="Text"
                Value="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum." />
        <Setter Property="TextWrapping"
                Value="Wrap" />
    </Style>
    <Style TargetType="{x:Type Border}"
           x:Key="HorizontalDividerBorder">
        <Setter Property="Background"
                Value="{DynamicResource MaterialDesignDivider}" />
        <Setter Property="UseLayoutRounding"
                Value="True" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="Height"
                Value="1" />
    </Style>

    <Style x:Key="CustomExpender"
           TargetType="{x:Type Expander}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryGrayColor}" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="FontWeight"
                Value="Normal" />
        <Setter Property="FontSize"
                Value="15" />
        <Setter Property="Height"
                Value="60" />
        <Setter Property="Style"
                Value="{StaticResource MaterialDesignExpander}"></Setter>
        <!--<Setter Property="Header">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type Expander}}}"
                                                 VerticalAlignment="Center"
                                                 Width="24"
                                                 Height="24" />
                        <TextBlock Text="{Binding Header, RelativeSource={RelativeSource AncestorType={x:Type Expander}}}"
                                   Margin="10,0,0,0" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>
    <Style x:Key="TransperantButton"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource MaterialDesignRaisedButton }">
        <Setter Property="Background"
                Value="{x:Null}" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="materialDesign:ButtonAssist.CornerRadius"
                Value="0" />
        <Setter Property="materialDesign:ShadowAssist.ShadowDepth"
                Value="Depth0" />
    </Style>
    <Style x:Key="CancelButton"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="Background"
                Value="{DynamicResource Gray}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource Gray}" />
        <Setter Property="Foreground"
                Value="{DynamicResource White}" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Height"
                Value="45" />
        <Setter Property="FontSize"
                Value="18" />
        <Setter Property="FontFamily"
                Value="poppins" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="materialDesign:ButtonAssist.CornerRadius"
                Value="7" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Foreground"
                        Value="{DynamicResource Gray}" />
                <Setter Property="Background"
                        Value="{DynamicResource White}" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="False">
                <Setter Property="Foreground"
                        Value="{DynamicResource White}" />
                <Setter Property="Background"
                        Value="{DynamicResource Gray}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="BlueButton"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="Background"
                Value="{DynamicResource Blue2}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource Blue2}" />
        <Setter Property="Foreground"
                Value="{DynamicResource White}" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Height"
                Value="45" />
        <Setter Property="FontSize"
                Value="18" />
        <Setter Property="FontFamily"
                Value="poppins" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="materialDesign:ButtonAssist.CornerRadius"
                Value="7" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Foreground"
                        Value="{DynamicResource Blue2}" />
                <Setter Property="Background"
                        Value="{DynamicResource White}" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="False">
                <Setter Property="Foreground"
                        Value="{DynamicResource White}" />
                <Setter Property="Background"
                        Value="{DynamicResource Blue2}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MainButton"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="Background"
                Value="{DynamicResource Blue2}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource Blue2}" />
        <Setter Property="Foreground"
                Value="{DynamicResource White}" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Height"
                Value="50" />
        <Setter Property="Width"
                Value="220" />
        <Setter Property="Margin"
                Value="0 0 20 0" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="FontSize"
                Value="18" />
        <Setter Property="FontFamily"
                Value="poppins" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="materialDesign:ButtonAssist.CornerRadius"
                Value="7" />
    </Style>
</ResourceDictionary>